{
    "name": "English (US)",
    "warning": "Warning",
    "error": "Error",
    "info": "Suggest",
    "invocationError": "Invocation Error!",
    "translator": {
        "serverError": "An error occurred on the server and the translation cannot be performed, please check the error message in the log of this day."
    },
    "fileConverters": {
        "fileNotFound": "Source file not found!",
        "otherErrors": "An error occurred during the conversion process!"
    },
    "fileDiff": {
        "chooseFileOne": "Select File 1",
        "chooseFileTwo": "Select File 2",
        "saveAs": "Save as...",
        "success": "Save file successfully!",
        "error": "Failed to save file! Error code {}"
    },
    "asciiArt": {
        "successTitle": "The output was successful!",
        "successMessage": "The file has been exported to the same level directory as the image!"
    },
    "launchers": {
        "dev": {
            "webConnectTest": {
                "input_url": "Enter the URL (prefixed)",
                "error_list": {
                    "1": "Missing prefix!",
                    "2": "Server Error!"
                }
            },
            "translator": {
                "informationRequired": "Baidu Translate requires your AppID and secret key to use. Do you want to enter it? \nTranslator promises to never compromise your privacy.",
                "title": "Translator",
                "informationInputs": {
                    "message": "Enter the AppID and Secret Key.",
                    "fields": ["AppID", "Secret Key"]
                },
                "inputs": {
                    "text": "Enter text",
                    "languageChooseMessage": "What language do you want to output?"
                },
                "completeInformation": {
                    "complete": "Translation complete!",
                    "original": "Original:",
                    "result": "Post-translation:",
                    "language": "Translation Language:"
                },
                "errorInformationMessage": "Parameters are missing!"
            },
            "fileConverters": {
                "chooseFile": {
                    "openTitle": "Open...",
                    "saveTitle": "Save as..."
                },
                "extensionError": "File extension error!"
            },
            "socketTools": {
                "getIP": {
                    "title": "IP address getter",
                    "inputMessage": "Enter a domain name\n or enter \"@default\" to use the local domain name",
                    "ip": "IP address:"
                },
                "resolveDomain": {
                    "title": "Domain name resolver",
                    "input": "Please enter an IP address.",
                    "Domain": "Parsed Result:"
                }
            }
        },
        "art": {
            "asciiArt": {
                "open": "Open...",
                "extensionError": "File extension error!"
            },
            "bingPicture": {
                "title": "Bing's Daily Graph",
                "saveAs": "Save as...",
                "inputs": {
                    "msg": "Please enter your information",
                    "fields": ["Index", "Region code"]
                },
                "success": "The image has been saved to the specified path.",
                "indexError": "The index must be a number!",
                "extensionError": "File extension error!"
            }
        },
        "external": {
            "webSpeedTestWarning": "The waiting time of this program is extremely long, about 2 minutes, and the speed test operation will be performed in the background. \nYou can still use this program normally while waiting.",
            "hashCheckerWarning": "The hash checker is in src/tools/hash.py, please use it according to the prompts (based on the console)"
        }
    },
    "system": {
        "about": "Python Utilities v3.0.0 en-us\nAuthor: @wangzixin1940\nCurrent Python file: main.py\nREADME file: README.md (en-US and zh-CN)\nGNU GPLv3 Licenseï¼šhttps://github.com/wangzixin1940/Python-Utilities/blob/main/LICENCE\nVERSION 2.11 RELEASE",
        "importSettings": {
            "open": "Open...",
            "warning": "Do you want to import settings? \nThe existing configuration file will be overwritten. \nCorrupted configuration files may cause the program to run incorrectly.",
            "complete": "The settings have been imported."
        }
    },
    "ui": {
        "utilities": {
            "title": "Utilities",
            "translator": "Translator",
            "weatherReport": "Weather Report",
            "speech2text": "Speech to Text",
            "to-do": "Easy To Do"
        },
        "dev": {
            "title": "Developer Tools",
            "connectInformation": "Web connection test",
            "speedtest": "Test your Internet speed"
        },
        "others": {
            "title": "Others",
            "passwordCreator": "Password generator"
        },
        "menus": {
            "file": {
                "title": "File",
                "importSettings": "Import settings...",
                "exit": "Exit"
            },
            "other": {
                "title": "Others",
                "calculator": "Calculator",
                "hashChecker": "Hash checker",
                "licenceCreator": "Licence Creator",
                "smfj": "Send mail from JSON",
                "ipTools": {
                    "title": "IP tools",
                    "getIP": "Get IP",
                    "resolveDomain": "Resolve domain"
                },
                "fileTools": {
                    "title": "File tools",
                    "jsonToXml": "JSON to XML",
                    "xmlToJson": "XML to JSON",
                    "jsonToCsv": "JSON to CSV",
                    "csvToJson": "CSV to JSON",
                    "diff": "File diff"
                },
                "qrcodeTools": {
                    "title": "QRcode tools",
                    "generate": "Generator",
                    "parse": "Parser"
                },
                "asciiArt": "Ascii art",
                "bingPicture": "Bing's daily graph",
                "pictureConvertor": "Photo format conversion",
                "amk": "Auto mouse and keyboard",
                "captcha": "Captcha generator (Beta)",
                "clock": "Clock",
                "countDown": "Count down",
                "pinyinDictionary": "Hanyu Pinyin Dictionary"
            },
            "settings": {
                "title": "Settings",
                "themes": "Color themes"
            },
            "about": "About"
        }
    },
    "externals": {
        "amk": {
            "open": "Open...",
            "launch": "Launch",
            "err": "An error occurred while executing the script: ",
            "notEnable": "Script is disabled! \nPlease add at the beginning of the script:\n#-- ENABLE --#\nOr replace #-- DISABLE --# with #-- ENABLE -- #",
			"fileNotFound": "Please select the file first!"
        },
        "calculator": {
            "title": "Calculator (Python implementation)",
            "quit": {
                "title": "Exit",
                "warn": "OK to Exit?"
            },
            "positivityError": "You can't change the positive and negative nature of the symbol! \nOr enter the number first and then change the positive and negative of the symbol.",
            "divideByZeroError": "The divisor cannot be 0!",
            "overflowError": "Expression overflow! (Larger than {max})",
            "expressionError": "Expression error!"
        },
        "captcha": {
            "title": "Captcha generator",
			"option": "Options",
            "picture": "Image captcha",
            "audio": "Audio captcha",
            "generate": "Generate",
            "inputs": {
                "chooseFonts": "Select the font file",
                "saveAs": "Save the captcha image"
            },
            "complete": "Captcha image has been generated!",
            "futureWarning": "This feature has a bug and cannot be used, please wait for the fix."
        },
        "chinesePinyinDictionary": {
            "title": "Hanyu Pinyin Dictionary",
            "input": "Please enter one\nor multiple\nChinese characters:",
            "query": "Query",
            "pinyin": "Pinyin: ",
            "zhuyin": "Zhuyin: ",
            "unknown": "Unknown"
        },
        "clock": {
            "title": "Clock by Python Turtle Demo(tdemo_clock.py)",
            "days": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            "month": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
        },
        "countDown": {
            "title": "Count Down Timer",
            "doWork": "Set up and run",
            "inputMessage": "How many seconds do you want to count down? \nEvery beep represents the passage of a second. \nPress OK to work, press Cancel to terminate the action."
        },
        "easyToDo": {
            "title": "Easy To Do",
            "add": "Add to-do",
            "content": "To-do",
            "delete": "Mark as done and delete the to-do",
            "modify": "Change to-do",
            "inputs": {
                "addMessage": "Write what you want to write below",
                "modifyMessage": "Change it below",
                "confirm": "Confirm",
                "cancel": "Cancel"
            }
        },
        "licenceCreator": {
            "title": "Licence Creator",
            "typeChoose": "Licence type: ",
            "params": {
                "label": "Params: ",
                "name": "Name: ",
                "year": "Year: ",
                "usage": "Usage: ",
                "projectName": "The name of the project: "
            },
            "create": "Create",
			"complete": "Complete",
			"saveComplete": "Successfully saved!"
        },
        "ocr": {
            "title": "Character Recognizer",
            "chooseImage": "Select an image",
            "recognize": "Recognition",
            "result": "Identification Result: ",
            "choosed": "Choosed"
        },
        "passwordCreator": {
            "title": "Password Creator",
            "strength": {
                "1": "Weak",
                "2": "Medium",
                "3": "Strong",
                "4": "Very Strong"
            },
            "passwordStrength": "Password Strength: ",
            "inclubes": {
                "symbols": "Inclube symbols",
                "numbers": "Include numbers",
                "uppers": "Include Uppercases",
                "lowers": "Include Lowercases"
            },
            "create": "Create",
            "unknown": "Unknown",
            "copy": "Copy",
			"copied": "Copied!",
			"completeInformation": "Password copied successfully!"
        },
        "photoFormatConverter": {
            "title": "Photo Format Converter",
            "choosePhoto": "Please select an image",
            "convert": "Convert",
            "noPictureSelectedError": "Please choose a picture first!",
            "complete": "Conversion successful!"
        },
        "qrcode": {
            "generator": {
                "title": "QRcode Generator",
                "inputs": {
                    "text": "Text: ",
                    "settings": "Settings:",
                    "drawer": "Drawer: ",
                    "image": "Image (Optional): ",
                    "save": "Save Image"
                },
                "generate": "Generate"
            },
            "decoder": {
                "title": "QRcode Decoder",
                "image": "Image path: ",
                "decode": "Decode"
            },
            "err": "Please select a model first! (1 or 2)"
        },
        "smfj": {
            "title": "Send Mail From JSON",
            "chooseFile": "Choose File",
            "send": "Send",
            "success": "Success",
            "successInformation": "Success to send!",
            "errorInformation": "Choose file first!"
        },
        "speech2text": {
            "title": "Speech to Text",
            "chooseAudio": "Please select an audio file",
            "convert": "Convert",
            "errorInformation": "Please select the audio file first!",
            "complete": "The conversion is complete! \nResult: {res}"
        },
        "systemInformation": {
            "choices": [
                "",
                "System Information Viewer V 1.0",
                "========================================================",
                "System Class",
                "1. System Architecture\t2. Machine Type\t3. System Version\t4. Processor (CPU) Name\t5. System Release Version\t6. The name of the system",
                "7. Name of the computer on the network\t8. Windows version (e.g. Professional, Home Basic) (Windows Only)",
                "9. Mac System Information (macOS Only)\t0. Linux System Information (Linux Only)",
                "About Python",
                "a. Python compilation code and compilation date\tb. Python Compiler Version\tc. Python Implementer ID\td. Python version",
                "e. Version interface for Jython (Jython Only)",
                "Program command",
                "ab. About\tx. Exit",
                ""
            ],
            "aboutText": [
                "",
                "About the System Information Viewer",
                "========================================================",
                "The System Information Viewer is a tool for viewing system information.",
                "The System Information Viewer is written in Python and uses the platform module of Python to obtain system information.",
                ""
            ],
            "systemClass": {
                "architecture": "System Architecture:",
                "machine": "Machine type: ",
                "platform": "System version: ",
                "cpu": "Processor (CPU) name: ",
                "release": "System release version: ",
                "name": "System Name: ",
                "machineName": "Name of the computer on the network: ",
                "windowsEdition": "Windows version: ",
                "macVersion": "Mac System Information: ",
                "freedesktopOSRelease": "Linux system version: "
            },
            "pythonClass": {
                "build": "Python compilation code and compilation date:",
                "compiler": "Python compiler version: ",
                "implementation": "Python implementation version: ",
                "pythonVersion": "Python version: ",
                "jpythonVersion": "JPython version interface: "
            },
            "errorOption": "Invalid option, please re-enter.",
            "inputOption": "Enter option >>>",
            "interrupt": "The user canceled the action.",
            "errorOccurred": "Error occurred: {err}"
        },
        "tools": {
            "hash": {
                "usage": [
                    "Usage:",
                    "python / py md5.py [filename] [--check [-md5][-sha256][-sha1][-sha224][value]]",
                    "",
                    "filename : File name. For example: \"1.py\", \"HelloWorld.java\".",
                    "",
                    "--check : Check the MD5, SHA256, SHA1 values of the file, for example: \"--check -md5 1234567890abcdef\"",
                    "    value : The MD5 value of the original file, e.g. \"1234567890abcdef\" (usually from the website or person that provided the file)",
                    "    -md5 : Verify the MD5 value of the file",
                    "    -sha256 : Verify the SHA256 value of the file",
                    "    -sha1 : Verify the SHA1 value of the file",
                    "    Note: -md5, -sha256, -sha1, and -sha224 cannot be used at the same time."
                ],
                "errors": {
                    "paramCountError": "\nError: Too many or too few parameters.\n",
                    "fileNotFound": "\nError: The file does not exist, please check the file name and path!\n",
                    "paramError": "\nError: Invalid parameter.\n",
                    "requiredParamMissingError": "\nError: Required parameters are missing.\n",
                    "paramTooManyError": "\nError: Too many parameters.\n",
                    "unknownError": "\nError: An unknown error or invalid parameter\n"
                },
                "prompts": {
                    "md5": {
                        "correct": "File MD5 values are correct! \nFile MD5 values: ",
                        "incorrect": "File MD5 value error! \nFile MD5 values:"
                    },
                    "sha256": {
                        "correct": "File SHA256 values are correct! \nFile SHA256 values: ",
                        "incorrect": "File SHA256 value error! \nFile SHA256 values: "
                    },
                    "sha1": {
                        "correct": "The file SHA1 value is correct! \nFile SHA1 values: ",
                        "incorrect": "File SHA1 value is wrong! \nFile SHA1 values: "
                    },
                    "sha224": {
                        "correct": "File SHA224 values are correct! \nFile SHA224 values: ",
                        "incorrect": "File SHA224 value error! \nFile SHA224 values: "
                    },
                    "information": {
                        "fileName": "File name: ",
                        "fileSize": "File size: ",
                        "fileType": "File type: ",
                        "lastModifiedTime": "File last modified:",
                        "md5": "File MD5 values:",
                        "sha256": "File SHA256 values:",
                        "sha1": "File SHA1 values:",
                        "sha224": "File SHA224 values:"
                    }
                }
            }
        },
        "weather": {
            "title": "Weather queries",
            "country": "Please enter the name of the country: ",
            "city": "Please enter the name of the city: ",
            "search": "Query",
            "infos": {
                "complete": "Query successful!",
                "weather": "Weather in {city}: ",
                "forecast_for_tomorrow": "Tomorrow's Prediction: {tomorrow}",
                "forecast_for_day_after_tomorrow": "Day after tomorrow's Prediction: {dat}",
                "forecastForDay4": "{day4} prediction: {day4f}",
                "forecastForDay5": "{day5} Prediction: {day5f}",
                "forecastForDay6": "{day6} prediction: {day6f}",
                "forecastForDay7": "{day7} prediction: {day7f}",
                "notIncludedError": "This city is not included, please check the input. \nOr look at the data/full_city_list.csv file to find your city ID (third or fourth column).",
                "errorNetwork": "The network connection is incorrect, please check the network connection.",
                "unknownError": "Unknown error, please try again later.",
                "errorDataNotFound": "The city list file was not found, please check the file path.",
                "errorData": "An error occurred while reading the city list file."
            }
        },
        "speedtest": {
            "title": "Internet speed test applet",
            "about": "Internet Speed Test Program (Standalone)\nBuilt on SpeedTest.net SpeedTest Library\nVersion 1.1\n",
            "info": "Upload: {up} MBits/s; Download: {down} MBits/s"
        }
    },
    "tools": {
        "clear": {
            "gui": {
                "infos": {
                    "log": "All log files have been deleted.",
                    "pycache": "All cache files have been deleted.",
                    "pycacheNotFound": "Cache file not found.",
                    "userDataWarning": "Are you sure you want to erase the profile?",
                    "userData": "The profile has been reset."
                },
                "title": "Clear",
                "buttons": {
                    "log": "Delete the log file generated during the runtime",
                    "pycache": "Delete the cache file",
                    "userData": "Erase Profile (Advanced)"
                }
            },
            "cli": {
                "infos": {
                    "log": "All log files have been deleted.",
                    "pycache": "All cache files have been deleted.",
                    "pycacheNotFound": "Cache file not found.",
                    "userDataWarning": "Do you clear all profiles? Enter 0000 to confirm the action. Note that this operation is irreversible!",
                    "userData": "The profile has been reset.",
                    "user_data_cancel": "This action was not done (/p)."
                },
                "usage": [
                    "Usage:",
                    "python / py clear.py [/l] [/c] [/p] [/?]",
                    "/l : Clear all logs",
                    "/c : Clear all caches",
                    "/p : Clear all profiles",
                    "------------------------------------",
                    "/l /c /p : Clear all",
                    "/? : Displays help information",
                    "------------------------------------"
                ],
                "errors": {
                    "paramsNotFound": "Error: Parameter not given",
                    "errorParam": "Error: The parameter is incorrect"
                }
            }
        }
    },
    "filetypes": {
        "all": ["All files", "*.*"],
        "no": ["No Extension", "*"],
        "txt": ["Plain Text", "*.txt"],
        "html": ["HTML Document", "*.html"],
        "json": ["JSON File", "*.json"],
        "xml": ["XML File", "*.xml"],
        "amk": ["Auto Mouse and Keyboard Script", "*.amk"],
        "py": ["Python Script", "*.py"],
        "images": {
            "jpg": ["JPEG Image", "*.jpg"],
            "png": ["PNG Image", "*.png"],
            "bmp": ["BMP Image", "*.bmp"],
            "gif": ["GIF Image", "*.gif"]
        },
        "wav": ["Wave Audio", "*.wav"]
    }
}